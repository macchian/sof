#
# Common pipeline gain (volume)
#
# A generic gain (volume) widget. All attributes defined herein are namespaced
# by alsatplg to "Object.Widget.gain.N.attribute_name"
#
# Usage: this component can be used by declaring int a parent object. i.e.
#
# 	Object.Widget.gain."N" {
#		index	1
#		format	s24le
#		no_pm	"true"
#	}
#
# Where N is the unique instance number for gain widget in the same alsaconf node.

<include/controls/mixer.conf>

Class.Widget."gain" {
	#
	# Pipeline ID for the gain widget object
	#
	DefineAttribute."index" {}

	#
	# gain object instance
	#
	DefineAttribute."instance" {}

	#include common component definition
	<include/components/widget-common.conf>

	#
	# gain widget UUID
	#
	DefineAttribute."uuid" {
		type	"string"
		# Token set reference name and type
		token_ref	"sof_tkn_comp.uuid"
	}

	#
	# Bespoke attributes for PGA
	#

	#
	# Gain curve type. The values provided will be translated to integer values
	# as specified in the tuple_values array.
	# For example: "linear" is translated to 0, "log" to 1 etc.
	#
	DefineAttribute."curve_type" {
		type	"string"
		# Token set reference name
		token_ref	"sof_tkn_gain.word"
		constraints {
			!valid_values [
				"linear"
				"log"
			]
			!tuple_values [
				0
				1
			]
		}
	}

	#
	# Gain curve in milliseconds
	#
	DefineAttribute."curve_duration" {
		# Token set reference name
		token_ref	"sof_tkn_gain.word"
	}

        DefineAttribute."init_value" {
                # Token set reference name
                token_ref       "sof_tkn_gain.word"
	}

	# Attribute categories
	attributes {
		#
		# The PGA widget name would be constructed using the index and instance attributes.
		# For ex: "gain.1.1" or "gain.10.2" etc.
		#
		!constructor [
			"index"
			"instance"
		]

		#
		# immutable attributes cannot be modified in the object instance
		#
		!immutable [
			"uuid"
			"type"
		]

		#
		# deprecated attributes should not be added in the object instance
		#
		!deprecated [
			"preload_count"
		]

		#
		# gain widget objects instantiated within the same alsaconf node must have unique
		# instance attribute
		#
		unique	"instance"
	}

	#
	# gain widget mixer controls
	#
	Object.Control {
		# gain mixer control
		mixer."1" {
			#Channel register and shift for Front Left/Right
			Object.Base.channel."fl" {
				shift	0
			}
			Object.Base.channel."fr" {}

			Object.Base.ops."ctl" {
				info 	"volsw"
				#256 binds the mixer control to volume get/put handlers
				get 	256
				put 	256
			}
			max 66

			Object.Base.tlv."vtlv_m64s1" {
                                        Object.Base.scale."m64s1" {
						min     1354970
						step    1
						mute    1
					}
                                }
		}
	}

	# Default attribute values for gain widget
	type 			"pga"
	uuid 			"A8:A9:BC:61:D0:18:18:4A:8E:7B:26:39:21:98:04:B7"
	no_pm			"true"
	period_sink_count	2
	period_source_count	2
	curve_type		"linear"
	curve_duration		10
	init_value		0x6fffffff
}
